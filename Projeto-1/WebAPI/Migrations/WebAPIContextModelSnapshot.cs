// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(WebAPIContext))]
    partial class WebAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("PlaylistConteudo", b =>
                {
                    b.Property<int>("ConteudoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlaylistId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConteudoId", "PlaylistId");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistConteudo");
                });

            modelBuilder.Entity("WebAPI.Entities.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CriadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId");

                    b.ToTable("Conteudos");
                });

            modelBuilder.Entity("WebAPI.Entities.Criador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Criadores");
                });

            modelBuilder.Entity("WebAPI.Entities.Curtida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConteudoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConteudoId");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("WebAPI.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CriadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("WebAPI.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PlaylistConteudo", b =>
                {
                    b.HasOne("WebAPI.Entities.Conteudo", null)
                        .WithMany()
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPI.Entities.Playlist", null)
                        .WithMany()
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAPI.Entities.Conteudo", b =>
                {
                    b.HasOne("WebAPI.Entities.Criador", "Criador")
                        .WithMany("Conteudos")
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Criador");
                });

            modelBuilder.Entity("WebAPI.Entities.Curtida", b =>
                {
                    b.HasOne("WebAPI.Entities.Conteudo", "Conteudo")
                        .WithMany("Curtidas")
                        .HasForeignKey("ConteudoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conteudo");
                });

            modelBuilder.Entity("WebAPI.Entities.Playlist", b =>
                {
                    b.HasOne("WebAPI.Entities.Criador", "Criador")
                        .WithMany("Playlists")
                        .HasForeignKey("CriadorId");

                    b.HasOne("WebAPI.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Criador");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAPI.Entities.Conteudo", b =>
                {
                    b.Navigation("Curtidas");
                });

            modelBuilder.Entity("WebAPI.Entities.Criador", b =>
                {
                    b.Navigation("Conteudos");

                    b.Navigation("Playlists");
                });
#pragma warning restore 612, 618
        }
    }
}
